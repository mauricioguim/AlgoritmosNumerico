# -*- coding: utf-8 -*-
"""SistemasLineares

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1QirCz7_ig4g8FcvQfQe895L9dCh-gRSF
"""

def substRetroativas(L,c):
 
 
  #saber o tamanho da matriz
  n = len(L)

  x = n*[0]

  for i in range(n-1, -1, -1):
    soma = 0
    for j in range(i+1, n):
      soma = soma + L[i][j]*x[j]
    x[i] = (c[i] - soma)/L[i][i]
  

  return x

def substSucessivas(L,c):
 
 
  #saber o tamanho da matriz
  n = len(L)

  x = n*[0]

  for i in range(0, n):
    soma = 0
    for j in range(0, i):
      soma = soma + L[i][j]*x[j]
    x[i] = (c[i] - soma)/L[i][i]
  

  return x

def eliminacaoGaussComPivo(L,k,c):

  
  r = 0
  n = len(L)
  for k in range(1, n-1):
    maior = abs(L[k][k])
    for i in range(k+1, n):
      if abs(L[i][k]) > maior:
        maior = abs(L[i][k])
        r = i
    for i in range(1, n):
      v = L[k]
      L[k] = L[r]
      L[r] = v

    v = c[k]
    c[k] = c[r]
    c[r] = v

    m = -1 * L[i][k]/L[k][k]
    for j in range(k+1, n):
      L[i][j] = m * L[k][j] + L[i][j]
      c[i] = m * c[k] + c[i]
      L[i][k] = 0

  x = substRetroativas (L,c)
  
  return x

def eliminacaoGauss(L,c):


  n = len(L)
  x = n*[0]

  for k in range(0, n-1):
    for i in range(k+1, n):
      m = -1 * L[i][k]/L[k][k]
      for j in range(k+1, n):
        L[i][j] = m * L[k][j] + L[i][j]
      c[i] = m * c[k] + c[i]
      L[i][k] = 0

  x = substRetroativas (L,c)
  
  return x

def identidade(n):

  m = []
  for i in range(0, n):
    linha = [0] * n
    linha[i] = 1
    m.append(linha) #Insere um item no final da lista
  return m

def lu(L):

  n = len(L)
  A = identidade(n)

  for k in range(0, n-1):
    for i in range(k+1, n):
      m = -1 * L[i][k]/L[k][k]
      A[i][k] = -m
      for j in range(k+1, n):
        L[i][j] = m * L[k][j] + L[i][j]
      
      L[i][k] = 0

  return (A,L)

def lux(A,U,c):
  y = substSucessivas(A,c)
  x = substRetroativas(U,y)

  return x

L = [[2, 0, 0, 0],
      [3, 5, 0, 0],
      [1, -6, 8, 0],
      [-1, 4, -3, 9]]
      
c = [4, 1, 48, 6]

x = substSucessivas(L,c)
print(x)

L = [[5, -2, 6, 1],
      [0, 3, 7, -4],
      [0, 0, 4, 5],
      [0, 0, 0, 2]]
      
c = [1, -2, 28, 8]

x = substRetroativas(L,c)
print(x)

L = [[1,1,0],
     [1,0,-1],
     [0,1,-1]]

c = [10, 5, 3]     

x = eliminacaoGauss(L, c)
print(x)

L = [[4,-6, 5],
     [0,5,1.5],
     [0,0,1.2]]

c = [29, -0.5, 3.6]

x = eliminacaoGaussComPivo(L,0, c)
print(x)

L = [[2,6,-3],
     [1,3.001,2],
     [4,-1,0]]

c = [5,9,29]

(A,U) = lu(L)
x = lux(A,U,c)
print(x)