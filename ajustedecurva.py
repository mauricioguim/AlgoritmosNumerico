# -*- coding: utf-8 -*-
"""ajusteDeCurva

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wEU0X9Kpg0z3Uw7T9sccYMtPLfh0uNvl
"""

import matplotlib.pyplot as plt
import numpy as np
import math


#vetores
x = np.array([0.3,2.7,4.5,5.9,7.8])
y = np.array([1.8,1.9,3.1,3.9,3.3])


n=len(x)
somax=0
somay=0
somaxy=0
somax2=0
somay2=0
my=np.mean(y)

#tabela
for i in range(n):
  somax = somax + x[i]
  somay = somay + y[i]
  somaxy = somaxy + x[i]*y[i]
  somax2 = somax2 + x[i]**2
  somay2 = somay2 + y[i]**2

b = (somax*somay - n*somaxy)/(somax**2 - n*somax2)
a = (somay - b*somax)/n

#Qualidade de ajuste
rn=0
rd=0
r2=0
for i in range(0,n):
  rn += (a + b*x[i] - my)**2
  rd += (y[i] - my)**2
r2 = math.sqrt(rn/rd)**2


#Função da reta
def funcaodareta(x,y,a,b):
  return a + b*x

#Soma dos quadrados da distância (Desvio)
desvio=0
for i in range(0,n):
  desvio += (y[i] - a -b*x[i])**2

print(f'\na: {a}')
print(f'b: {b}\n')
print(f'u(x) = {a} + {b}x\n')

#Plotagem
plt.title('Ajuste de curvas')
plt.scatter(x,y)
plt.plot(x,funcaodareta(x,y,a,b), color ='red')
plt.xlabel('x')
plt.ylabel('y')
plt.show()

print(f'\n\nSoma dos quadrados da distância (Desvio) D: {desvio}')
print(f'\nQualidade do ajuste R²: {r2}\n\n') 


#menu
escolha = int(input('Deseja avaliar o valor da função em algum ponto específico?\n[1]-Sim\n[2]-Não\n'))
if escolha == 1:
  valor = float(input('Informe o ponto que deseja avaliar:\n'))
  f = funcaodareta(valor,y,a,b)
  print(f'\nAvaliação no ponto: {f}\n')
else:
  exit(1)