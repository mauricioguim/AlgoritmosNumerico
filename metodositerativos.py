# -*- coding: utf-8 -*-
"""metodosIterativos

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1O-rDPf_Q3T58zCcXQqRJZrMHg2S0x8ng

**Método de Lagrange**
"""

import numpy as np
import sympy as sym

def lagrange(x,y,grau,xn):
  
  pn = 0
  n = grau
  
  for i in range(0,n):
    l = 1
    p = 0
    for j in range(0,n):
      if i != j:
        l = l*((xn - x[j])/(x[i] - x[j]))
        p = y[i]*l
    pn = pn + p
         
  return pn

"""**Método de Newton**"""

import numpy as np
import sympy as sym

def newton(x,y,grau,xn):
    
  n = grau
  p = []
  for i in range(n):
    p.append(y[i])

  for j in range(1,n):
    for i in range(n-1,j-1,-1):
      p[i] = float(p[i]-p[i-1])/float(x[i]-x[i-j])
  
  t = len(p)-1
  pn = p[t]
  for i in range(t-1,-1,-1):
    pn = pn*(xn-x[i]) + p[i]
  return pn



"""**Cálculo do erro**"""

import numpy as np
import sympy as sym

def erro(x,y,xn):
  
  n = len(x)
  e=1
  p = []
  for i in range(n):
    p.append(y[i])
  
  for j in range(1,n):
    for i in range(n-1,j-1,-1):
      p[i] = (p[i]-p[i-1])/float(x[i]-x[i-j])
    
  for i in range(0,n):
    e = e*abs(xn-x[i])
  e = e*abs(p[j])
  return e

"""**Menu de opções com os vetores X e Y**"""

#menu

import numpy as np
import sympy as sym

#vetores/array/listas
x = np.array( [0.2,  0.4, 0.52, 0.72])
y = np.array([0.16, 0.27, 0.29, 0.37])

n = len(x)
op = True
xn = sym.Symbol('x')

while op:
  while op:
    grau = int(input("\nInforme o grau interpolador:\n"))
    if grau > n-1 or grau < 1:
      print(f"\ngrau inválido! O grau tem que ser de 0 a {n-1}\n")
    else:
      while op:
        metodo = int(input("\nInforme qual método deseja utilizar\n[1]-Método de Lagrange\n[2]-Método de Newton\n"))
        if metodo == 1:
          lag = lagrange(x,y,grau+1,xn)
          print(f'\nResposta: {lag}\n')
          break
        if metodo == 2:
          new = newton(x,y,grau+1,xn)
          print(f'\nResposta: {new}\n')
          break
        if metodo != 1 or metodo != 2:
          print("\nOpção inválida!\n")
       
      break    
  
  pontoespec = int(input("\nDeseja calcular em algum ponto especifico?\n[1]-Sim\n[2]-Não\n"))
  if pontoespec == 1:
    ponto = float(input("\nInforme o ponto especifico que deseja calcular:\n"))
    resultado = lagrange(x,y,grau+1,ponto)
    print(resultado)
    
    error = float(input("\nDeseja calcular a estimativa do erro?\n[1]-Sim\n[2]-Não\n"))
    if error == 1:
      e = erro(x,y,ponto)
      print(e)
    else:
      exit(1)

  recalc = int(input("\n\nDeseja refazer os calculos?\n[1]-Sim\n[2]-Não\n"))
  if recalc == 2:
    break